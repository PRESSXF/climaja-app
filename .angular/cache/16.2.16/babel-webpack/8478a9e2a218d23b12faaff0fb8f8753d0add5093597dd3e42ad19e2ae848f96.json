{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/clima.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@ionic/angular\";\nimport * as i5 from \"../pipes/temperatura.pipe\";\nfunction DetalhesClimaPage_ion_spinner_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ion-spinner\", 4);\n  }\n}\nfunction DetalhesClimaPage_div_6_ion_item_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\")(1, \"ion-label\")(2, \"h3\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"temperatura\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"p\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(4, 3, item_r3.dt_txt, \"fullDate\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Temperatura: \", i0.ɵɵpipeBind1(7, 6, item_r3.main.temp), \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Condi\\u00E7\\u00E3o: \", item_r3.weather[0].description, \"\");\n  }\n}\nfunction DetalhesClimaPage_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ion-list\");\n    i0.ɵɵtemplate(4, DetalhesClimaPage_div_6_ion_item_4_Template, 10, 8, \"ion-item\", 5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Previs\\u00E3o para \", ctx_r1.cidade, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.previsao5dias.list);\n  }\n}\nexport let DetalhesClimaPage = /*#__PURE__*/(() => {\n  class DetalhesClimaPage {\n    constructor(route,\n    // Serviço para acessar parâmetros da rota\n    climaService // Serviço para requisições de clima\n    ) {\n      this.route = route;\n      this.climaService = climaService;\n      // Nome da cidade para a qual será exibida a previsão\n      this.cidade = '';\n      // Flag para indicar se a requisição está em andamento (loading)\n      this.carregando = false;\n    }\n    // Método executado na inicialização do componente\n    ngOnInit() {\n      // Obtém o parâmetro 'cidade' da rota e decodifica para uso\n      this.cidade = decodeURIComponent(this.route.snapshot.paramMap.get('cidade') || '');\n      if (this.cidade) {\n        this.buscarPrevisao(); // Busca a previsão para a cidade\n      }\n    }\n    // Método para buscar a previsão de 5 dias da cidade\n    buscarPrevisao() {\n      this.carregando = true; // Ativa o indicador de carregamento\n      this.climaService.getPrevisao5Dias(this.cidade).subscribe(data => {\n        this.previsao5dias = data; // Armazena os dados da previsão\n        this.carregando = false; // Desativa o indicador de carregamento\n      }, error => {\n        console.error('Erro ao buscar previsão:', error);\n        this.carregando = false; // Desativa o indicador em caso de erro\n      });\n    }\n    static {\n      this.ɵfac = function DetalhesClimaPage_Factory(t) {\n        return new (t || DetalhesClimaPage)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ClimaService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: DetalhesClimaPage,\n        selectors: [[\"app-detalhes-clima\"]],\n        decls: 7,\n        vars: 2,\n        consts: [[\"color\", \"primary\"], [1, \"ion-padding\"], [\"name\", \"crescent\", 4, \"ngIf\"], [4, \"ngIf\"], [\"name\", \"crescent\"], [4, \"ngFor\", \"ngForOf\"]],\n        template: function DetalhesClimaPage_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\", 0)(2, \"ion-title\");\n            i0.ɵɵtext(3, \"Detalhes do Clima\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(4, \"ion-content\", 1);\n            i0.ɵɵtemplate(5, DetalhesClimaPage_ion_spinner_5_Template, 1, 0, \"ion-spinner\", 2);\n            i0.ɵɵtemplate(6, DetalhesClimaPage_div_6_Template, 5, 2, \"div\", 3);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngIf\", ctx.carregando);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.previsao5dias);\n          }\n        },\n        dependencies: [i3.NgForOf, i3.NgIf, i4.IonContent, i4.IonHeader, i4.IonItem, i4.IonLabel, i4.IonList, i4.IonSpinner, i4.IonTitle, i4.IonToolbar, i3.DatePipe, i5.TemperaturaPipe],\n        styles: [\"@charset \\\"UTF-8\\\";ion-content[_ngcontent-%COMP%]{--background: #e0f7fa}h2[_ngcontent-%COMP%]{color:#00796b;margin-top:16px}ion-list[_ngcontent-%COMP%]{margin-top:24px}\"]\n      });\n    }\n  }\n  return DetalhesClimaPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}